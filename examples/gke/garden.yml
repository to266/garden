kind: Project
name: gke
environments:
  - name: gke-kaniko
    variables:
      buildMode: kaniko
      # Use an in-cluster registry instead of GCR
      deploymentRegistry: null
      imagePullSecrets: []
  - name: gke-kaniko-gcr
    variables:
      buildMode: kaniko
  - name: gke-buildkit
    variables:
      buildMode: cluster-buildkit
      # Use an in-cluster registry instead of GCR
      deploymentRegistry: null
      imagePullSecrets: []
  - name: gke-buildkit-gcr
    variables:
      buildMode: cluster-buildkit
providers:
  - name: kubernetes
    context: ${var.gkeContext}
    namespace: ${var.namespace}
    defaultHostname: ${var.defaultHostname}
    buildMode: ${var.buildMode}
    deploymentRegistry: ${var.deploymentRegistry}
    imagePullSecrets: ${var.imagePullSecrets}
variables:
  # Replace these values as appropriate
  # > the kube context of the cluster
  gkeContext: gke_garden-ci_europe-west1-b_core-ci
  # > any hostname that points to your cluster's ingress controller
  defaultHostname: ${local.env.CIRCLE_BUILD_NUM || local.username}-gke.dev-1.sys.garden
  # > the namespace to deploy to in the cluster
  namespace: gke-testing-${local.env.CIRCLE_BUILD_NUM || local.username}
  deploymentRegistry:
    # Replace these values as appropriate
    hostname: eu.gcr.io            # <- set this according to the region your cluster runs in
    namespace: garden-ci   # <- set this to the project ID of the target cluster
  imagePullSecrets:
    # Make sure this matches the name and namespace of the imagePullSecret you've created
    - name: gcr-config
      namespace: default
